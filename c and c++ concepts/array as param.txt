/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
using namespace std;

// void fun(int A[], int size) {  // int A[] can also be written as int *A (pointer)
//     for(int i=0;i<size;i++) {
//         A[i] = A[i] + 10;
//     }
// }

// int main() {
    
//     int A[]={10,20,30,40,50};
//     int n=5;
//     fun(A, 5);
    
//     for(int x:A) {
//         cout<<x<<endl;
//     }
//     return 0;
// }


int * fun(int size) {
    int *p;
    // p = (int *)malloc(size * sizeof(int));
    p = new int[size];
    
    for(int i=0;i<size;i++) {
        p[i] = i+1;
    }
    
    return p;
}

int main() {
    
    int *ptr;
    int sz = 10;
    ptr = fun(sz);
    
    for(int i=0;i<sz;i++) {
        cout<<ptr[i]<<endl;
    }
    
    return 0;
}



notes:

- arrays are always passed as address
- formal paramater is always a pointer i.e int A[] can also be written as int *A
- for-each loop can't be used on pointers